// Norminette -R CheckDefine
// cc -Wall -Werror -Wextra
/*
	ISALPHA

#include <unistd.h>
int	main(void)
{
	int	result;
	
	result = ft_str_is_alpha("abc");
	if (result == 0)
		write(1, "0", 1);
	else if (result == 1)
		write (1, "1", 1);
	return (0);
}
*/

 
/* 	ISDIGIT

#include "libft.h"
int main(void)
{
    printf("%d\n",ft_isdigit("1"));
}
 */

/*
	ISALNUM

#include <stdio.h>
int main(void)
{
    int result = ft_str_is_alnum("123a;");

    if (result)
        printf("%d\n", 1);
    else
        printf("%d\n", 0);
    return (0);
}
*/

/*
	ISASCII

	#include <stdio.h>
int main(void)
{
    int result = ft_str_is_ascii("asdjhsdjag;Â£");

    if (result)
        printf("%d\n", 1);
    else if (!result)
        printf("%d\n", 0);

}
*/

/*
	STRLEN

#include <stdio.h>
int main(void)
{
    int length = ft_strlen("thanh");
    printf("%d\n", length);
}
*/

/*
	MEMSET

#include <stdio.h>
int main(void)
{
    char    buffer[10];
    char    *pointer;

    ft_memset(buffer, 'A', 10);
    pointer = buffer;
    while (pointer < buffer + 10)
    {
        printf("%c\n", *pointer);
        pointer++;
    }
    return (0);
}
*/

    ISPRINT
